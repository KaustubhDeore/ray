
- label: ":book: Lint"
  commands:
    - export LINT=1
    - ./ci/env/install-dependencies.sh
    - ./ci/ci.sh lint

- label: ":book: Documentation"
  commands:
    - export LINT=1
    - echo "--- Setting up Python 3.7 environment."
    - ./ci/env/install-dependencies.sh
    # Specifying above somehow messes up the Ray install.
    # Uninstall and re-install Ray so that we can use Ray Client
    # (remove thirdparty_files to sidestep an issue with psutil).
    - pip uninstall -y ray && rm -rf /ray/python/ray/thirdparty_files
    - pushd /ray && git clean -f -f -x -d -e .whl -e python/ray/dashboard/client && popd
    - bazel clean --expunge
    - ./ci/ci.sh build

- label: ":book: LinkCheck"
  commands:
    - export LINT=1
    - ./ci/env/install-dependencies.sh
    - ./ci/ci.sh check_sphinx_links
  soft_fail: True


- label: ":octopus: Tune soft imports test"
  conditions: ["RAY_CI_TUNE_AFFECTED"]
  commands:
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    # no TUNE_TESTING=1 on purpose
    - ./ci/env/install-dependencies.sh
    - ./ci/env/env_info.sh
    - bazel test --config=ci $(./ci/run/bazel_export_options) --build_tests_only --test_tag_filters=soft_imports python/ray/tune/...

- label: ":python: Ray DAG Tests"
  conditions:
    [
        "RAY_CI_PYTHON_AFFECTED",
    ]
  commands:
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    - pip install -U pydot
    - sudo apt-get install -y graphviz
    - ./ci/env/env_info.sh
    - bazel test --config=ci $(./scripts/bazel_export_options)
      --test_tag_filters=ray_dag_tests
      python/ray/dag/...
